---
- name: Esperar a que el API server esté listo
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf get nodes
  register: api_status
  until: api_status.rc == 0
  retries: 10
  delay: 10
  become: true

- name: Instalar Calico (sin validación)
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.0/manifests/calico.yaml --validate=false
  become: true

- name: Esperar a que Calico esté listo
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf wait --for=condition=Ready pods -l k8s-app=calico-node -n kube-system --timeout=300s
  become: true
  register: calico_wait
  until: calico_wait.rc == 0
  retries: 10
  delay: 30

- name: Instalar Dashboard
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml
  become: true

- name: Crear cuenta de administrador para Dashboard
  copy:
    content: |
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: admin-user
        namespace: kubernetes-dashboard
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: admin-user
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: admin-user
        namespace: kubernetes-dashboard
    dest: /tmp/dashboard-admin.yaml
    owner: root
    group: root
    mode: 0600
  become: true

- name: Aplicar configuración de administrador
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f /tmp/dashboard-admin.yaml
  become: true

- name: Obtener token de acceso
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf -n kubernetes-dashboard create token admin-user
  register: dashboard_token
  become: true
  changed_when: false

- name: Mostrar token de acceso
  debug:
    msg: "Token para Dashboard: {{ dashboard_token.stdout }}"